#!/bin/bash

if [ ! -f ./tinylang ]; then
    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω ./tinylang"
    exit 1
fi

echo "üß™ –¢–µ—Å—Ç—ã –¥–ª—è TinyLang (–º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ, –±–µ–∑ –∏–º–ø–æ—Ä—Ç–æ–≤)"

run_test() {
    local file="$1"
    local desc="$2"
    echo
    echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
    echo "üìÑ $desc"
    echo "‚öôÔ∏è  $file"
    if ./tinylang "$file" 2>&1; then
        echo "‚úÖ –£–°–ü–ï–•"
    else
        echo "‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–µ–º–æ)"
    fi
}

run_test "WhileIntCondition.mod" "WHILE —Å INTEGER —É—Å–ª–æ–≤–∏–µ–º"
run_test "ProcedureReturn.mod" "RETURN 10 –≤ PROCEDURE"
run_test "ScopeTest.mod" "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ –≤ —Ä–∞–∑–Ω—ã—Ö scope"
run_test "DuplicateParam.mod" "–î—É–±–ª–∏—Ä—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (INTEGER, INTEGER)"
run_test "BooleanLiterals.mod" "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ BOOLEAN –∏ TRUE/FALSE"


# –ì–¥–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è —Ç–∏–ø—ã INTEGER, BOOLEAN?
# ‚Äî –í –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–µ –æ–Ω–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞–∫ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ (predefined) —Ç–∏–ø—ã. –û–±—ã—á–Ω–æ –≤ –º–æ–¥—É–ª–µ, –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ–º SYSTEM, –∏–ª–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π —Ç–∞–±–ª–∏—Ü–µ.

# –ö–∞–∫ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Ö—Ä–∞–Ω–∏—Ç —Ç–∏–ø—ã?
# ‚Äî –í —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫ –∫–∞–∂–¥–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ (scope). –ö–∞–∂–¥—ã–π —É–∑–µ–ª AST —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è, –ø–æ–ª—É—á–∞–µ–º—É—é —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–º –æ–±—Ö–æ–¥–æ–º –∏ –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏.

# –ö–∞–∫ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è RETURN –≤ –ø—Ä–æ—Ü–µ–¥—É—Ä–µ?
# ‚Äî –ü—Ä–∏ –æ–±—Ö–æ–¥–µ AST —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∑–Ω–∞–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –æ–Ω –≤–Ω—É—Ç—Ä–∏ PROCEDURE –∏–ª–∏ FUNCTION. –ï—Å–ª–∏ –≤ PROCEDURE –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è RETURN —Å –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º ‚Äî –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –æ—à–∏–±–∫–∞.

# –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–∏—Å–∫ –∏–º–µ–Ω–∏ –≤ scope?
# ‚Äî –ü–æ —Ü–µ–ø–æ—á–∫–µ –æ–±–ª–∞—Å—Ç–µ–π: —Å–Ω–∞—á–∞–ª–∞ –≤ —Ç–µ–∫—É—â–µ–π —Ç–∞–±–ª–∏—Ü–µ, –∑–∞—Ç–µ–º –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π (scope->parent), –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥—ë—Ç—Å—è –∏–ª–∏ –Ω–µ –¥–æ–π–¥—ë—Ç –¥–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏.

# –ì–¥–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è?
# ‚Äî –í –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞ tinylang, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤ —Ñ–∞–π–ª–∞—Ö —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, SemanticAnalyzer.cpp –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã—Ö).

# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä TRUE/FALSE?
# ‚Äî –î–∞, –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –≤ BooleanLiterals.mod. –≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ª–∏—Ç–µ—Ä–∞–ª—ã —Ç–∏–ø–∞ BOOLEAN –≤ Modula-2.